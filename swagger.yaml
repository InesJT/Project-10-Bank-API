swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Get all accounts
      description: Get all accounts for the authenticated user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Accounts list
          schema:
            $ref: '#/definitions/AccountsList'
        '401':
          description: Not authorized
        '404':
          description: Transaction not found
        "500":
          description: Internal Server Error
  
  /transactions/current-month:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get accounts transactions for the current month
      description: Retrieves current month transactions for all accounts of the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      responses:
        '200':
          description: Accounts list with their corresponding transactions
          schema:
            $ref: '#/definitions/TransactionsList'
        '401':
          description: Not authorized
        '500':
          description: Internal Server Error
 
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction details
      description: Retrieve transaction details for the given transaction id
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: transaction id
          required: true
          type: string
      responses:
        '200':
          description: Transaction details
          schema:
            $ref: '#/definitions/TransactionDetails'
        '401':
          description: Not authorized
        '404':
          description: Transaction not found
        "500":
          description: Internal Server Error

   
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update transaction
      description: Add or modify or delate a transaction's description
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: transaction id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PatchTransaction'
      responses:
        '200':
          description: Update transaction fields
        '401':
          description: Not authorized
        '404':
          description: Transaction not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  AccountsList:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/SimpleAccount'

  SimpleAccount:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      balance:
        type: number
        format: double
      accountType:
        type: string
        enum: [savings, credit, checking]

  TransactionsList:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      amount:
        type: number
        format: double
      description:
        type: string
      category:
        type: string
        enum: [Food, Shopping, Transfer, Salary, Other]
      notes:
        type: string

  TransactionDetails:
    allOf:
      - $ref: '#/definitions/Transaction'
      - type: object
        properties:
          notes:
            type: string
          createdAt:
            type: string
            format: date-time

  NewTransaction:
    type: object
    required:
      - amount
      - description
    properties:
      amount:
        type: number
        format: double
      description:
        type: string
      date:
        type: string
        format: date
      category:
        type: string
        enum: [Food, Shopping, Transfer, Salary, Other]
      notes:
        type: string

  PatchTransaction:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
